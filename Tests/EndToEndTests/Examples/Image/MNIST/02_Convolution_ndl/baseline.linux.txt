CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/02_Convolution/../../../../../../Examples/Image/MNIST/Config/02_Convolution.cntk currentDirectory=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/TestData RunDir=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu DataDir=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/TestData ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/02_Convolution/../../../../../../Examples/Image/MNIST/Config OutputDir=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu DeviceId=0 timestamping=true forceDeterministicAlgorithms=true train=[SGD=[maxEpochs=3]] imageLayout="cudnn"
-------------------------------------------------------------------
Build info: 

		Built time: Aug 26 2016 09:19:57
		Last modified date: Fri Aug 26 09:18:31 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: a718f2f213d1a045d5bbfa88f90c18fe15bd22f2
		Built by philly on 643085f7f8c2
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/TestData
08/26/2016 11:16:48: -------------------------------------------------------------------
08/26/2016 11:16:48: Build info: 

08/26/2016 11:16:48: 		Built time: Aug 26 2016 09:19:57
08/26/2016 11:16:48: 		Last modified date: Fri Aug 26 09:18:31 2016
08/26/2016 11:16:48: 		Build type: release
08/26/2016 11:16:48: 		Build target: GPU
08/26/2016 11:16:48: 		With 1bit-SGD: no
08/26/2016 11:16:48: 		Math lib: mkl
08/26/2016 11:16:48: 		CUDA_PATH: /usr/local/cuda-7.5
08/26/2016 11:16:48: 		CUB_PATH: /usr/local/cub-1.4.1
08/26/2016 11:16:48: 		CUDNN_PATH: /usr/local/cudnn-4.0
08/26/2016 11:16:48: 		Build Branch: HEAD
08/26/2016 11:16:48: 		Build SHA1: a718f2f213d1a045d5bbfa88f90c18fe15bd22f2
08/26/2016 11:16:48: 		Built by philly on 643085f7f8c2
08/26/2016 11:16:48: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
08/26/2016 11:16:48: -------------------------------------------------------------------
08/26/2016 11:16:49: -------------------------------------------------------------------
08/26/2016 11:16:49: GPU info:

08/26/2016 11:16:49: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/26/2016 11:16:49: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/26/2016 11:16:49: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/26/2016 11:16:49: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/26/2016 11:16:49: -------------------------------------------------------------------

08/26/2016 11:16:49: Running on localhost at 2016/08/26 11:16:49
08/26/2016 11:16:49: Command line: 
/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/02_Convolution/../../../../../../Examples/Image/MNIST/Config/02_Convolution.cntk  currentDirectory=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/TestData  RunDir=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu  DataDir=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/TestData  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/02_Convolution/../../../../../../Examples/Image/MNIST/Config  OutputDir=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu  DeviceId=0  timestamping=true  forceDeterministicAlgorithms=true  train=[SGD=[maxEpochs=3]]  imageLayout="cudnn"


Configuration After Processing and Variable Resolution:

configparameters: 02_Convolution.cntk:command=train:test
configparameters: 02_Convolution.cntk:configDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/02_Convolution/../../../../../../Examples/Image/MNIST/Config
configparameters: 02_Convolution.cntk:currentDirectory=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/TestData
configparameters: 02_Convolution.cntk:dataDir=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/TestData
configparameters: 02_Convolution.cntk:deviceId=0
configparameters: 02_Convolution.cntk:forceDeterministicAlgorithms=true
configparameters: 02_Convolution.cntk:imageLayout=cudnn
configparameters: 02_Convolution.cntk:modelDir=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/Models
configparameters: 02_Convolution.cntk:modelPath=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/Models/02_Convolution
configparameters: 02_Convolution.cntk:numMBsToShowResult=500
configparameters: 02_Convolution.cntk:outputDir=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu
configparameters: 02_Convolution.cntk:precision=float
configparameters: 02_Convolution.cntk:rootDir=..
configparameters: 02_Convolution.cntk:RunDir=/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu
configparameters: 02_Convolution.cntk:test=[
    action = test
    minibatchSize = 1024
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/TestData/Test-28x28_cntk_text.txt"
        input = [
            features = [
            dim = 784
            format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]

configparameters: 02_Convolution.cntk:timestamping=true
configparameters: 02_Convolution.cntk:traceLevel=1
configparameters: 02_Convolution.cntk:train=[
    action = "train"
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/02_Convolution/../../../../../../Examples/Image/MNIST/Config/Macros.ndl"
        networkDescription = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/02_Convolution/../../../../../../Examples/Image/MNIST/Config/02_Convolution.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerMB = 0.1*5:0.3
        momentumPerMB = 0*10:0.7
        maxEpochs = 15
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/TestData/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]    
] [SGD=[maxEpochs=3]]

08/26/2016 11:16:49: Commands: train test
08/26/2016 11:16:49: Precision = "float"
08/26/2016 11:16:49: CNTKModelPath: /tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/Models/02_Convolution
08/26/2016 11:16:49: CNTKCommandTrainInfo: train : 3
08/26/2016 11:16:49: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

08/26/2016 11:16:49: ##############################################################################
08/26/2016 11:16:49: #                                                                            #
08/26/2016 11:16:49: # Action "train"                                                             #
08/26/2016 11:16:49: #                                                                            #
08/26/2016 11:16:49: ##############################################################################

08/26/2016 11:16:49: CNTKCommandTrainBegin: train

08/26/2016 11:16:49: Creating virgin network.
NDLBuilder Using GPU 0
Node 'featScale' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.000000.
Node 'conv1.w.W' (LearnableParameter operation): Initializing Parameter[16 x 25] <- 0.000000.
Node 'conv1.b.b' (LearnableParameter operation): Initializing Parameter[1 x 1 x 16] <- 0.000000.
Node 'conv2.w.W' (LearnableParameter operation): Initializing Parameter[32 x 400] <- 0.000000.
Node 'conv2.b.b' (LearnableParameter operation): Initializing Parameter[1 x 1 x 32] <- 0.000000.
Node 'h1.W' (LearnableParameter operation): Initializing Parameter[128 x 7 x 7 x 32] <- 0.000000.
Node 'h1.b' (LearnableParameter operation): Initializing Parameter[128 x 1] <- 0.000000.
Node 'ol.W' (LearnableParameter operation): Initializing Parameter[10 x 128] <- 0.000000.
Node 'ol.b' (LearnableParameter operation): Initializing Parameter[10 x 1] <- 0.000000.
Node 'featScale' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.003906.
Node 'featScale' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.003906.
Node 'featScale' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.003906.
Node 'conv1.w.W' (LearnableParameter operation): Initializing Parameter[16 x 25] <- uniform(seed=1, init dims=[16 x 25], range=0.050000*10.000000, onCPU=true).
Node 'conv1.b.b' (LearnableParameter operation): Initializing Parameter[1 x 1 x 16] <- 1.000000.
Node 'conv2.w.W' (LearnableParameter operation): Initializing Parameter[32 x 400] <- uniform(seed=2, init dims=[32 x 400], range=0.050000*10.000000, onCPU=true).
Node 'conv2.b.b' (LearnableParameter operation): Initializing Parameter[1 x 1 x 32] <- 1.000000.
Node 'h1.W' (LearnableParameter operation): Initializing Parameter[128 x 7 x 7 x 32] <- uniform(seed=3, init dims=[128 x 1568], range=0.050000*1.000000, onCPU=true).
Node 'h1.b' (LearnableParameter operation): Initializing Parameter[128 x 1] <- uniform(seed=4, init dims=[128 x 1], range=0.050000*1.000000, onCPU=true).
Node 'ol.W' (LearnableParameter operation): Initializing Parameter[10 x 128] <- uniform(seed=5, init dims=[10 x 128], range=0.050000*1.000000, onCPU=true).
Node 'ol.b' (LearnableParameter operation): Initializing Parameter[10 x 1] <- uniform(seed=6, init dims=[10 x 1], range=0.050000*1.000000, onCPU=true).

Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ClassificationError()
	ol.z = Plus()

Validating network. 27 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> ol.W = LearnableParameter() :  -> [10 x 128]
Validating --> h1.W = LearnableParameter() :  -> [128 x 7 x 7 x 32]
Validating --> conv2.w.W = LearnableParameter() :  -> [32 x 400]
Validating --> conv1.w.W = LearnableParameter() :  -> [16 x 25]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [28 x 28 x 1 x *]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [28 x 28 x 1 x *] -> [28 x 28 x 1 x *]
Validating --> conv1.c.c = Convolution (conv1.w.W, featScaled) : [16 x 25], [28 x 28 x 1 x *] -> [28 x 28 x 16 x *]
Validating --> conv1.b.b = LearnableParameter() :  -> [1 x 1 x 16]
Validating --> conv1.cpb = Plus (conv1.c.c, conv1.b.b) : [28 x 28 x 16 x *], [1 x 1 x 16] -> [28 x 28 x 16 x *]
Validating --> conv1.out = RectifiedLinear (conv1.cpb) : [28 x 28 x 16 x *] -> [28 x 28 x 16 x *]
Validating --> pool1 = MaxPooling (conv1.out) : [28 x 28 x 16 x *] -> [14 x 14 x 16 x *]
Validating --> conv2.c.c = Convolution (conv2.w.W, pool1) : [32 x 400], [14 x 14 x 16 x *] -> [14 x 14 x 32 x *]
Validating --> conv2.b.b = LearnableParameter() :  -> [1 x 1 x 32]
Validating --> conv2.cpb = Plus (conv2.c.c, conv2.b.b) : [14 x 14 x 32 x *], [1 x 1 x 32] -> [14 x 14 x 32 x *]
Validating --> conv2.out = RectifiedLinear (conv2.cpb) : [14 x 14 x 32 x *] -> [14 x 14 x 32 x *]
Validating --> pool2.p = Pooling (conv2.out) : [14 x 14 x 32 x *] -> [7 x 7 x 32 x *]
Validating --> h1.t = Times (h1.W, pool2.p) : [128 x 7 x 7 x 32], [7 x 7 x 32 x *] -> [128 x *]
Validating --> h1.b = LearnableParameter() :  -> [128 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [128 x *], [128 x 1] -> [128 x 1 x *]
Validating --> h1.y = Sigmoid (h1.z) : [128 x 1 x *] -> [128 x 1 x *]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 128], [128 x 1 x *] -> [10 x 1 x *]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *], [10 x 1] -> [10 x 1 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> errs = ClassificationError (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]

Validating network. 16 nodes to process in pass 2.


Validating network, final pass.

conv1.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 1, Output: 28 x 28 x 16, Kernel: 5 x 5 x 1, Map: 1 x 1 x 16, Stride: 1 x 1 x 1, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
pool1: using cuDNN convolution engine for geometry: Input: 28 x 28 x 16, Output: 14 x 14 x 16, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
conv2.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 16, Output: 14 x 14 x 32, Kernel: 5 x 5 x 16, Map: 32, Stride: 1 x 1 x 16, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0 x 0 x 0, UpperPad: 0 x 0 x 0.
pool2.p: using cuDNN convolution engine for geometry: Input: 14 x 14 x 32, Output: 7 x 7 x 32, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0 x 0 x 0, UpperPad: 0 x 0 x 0.


11 out of 27 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/26/2016 11:16:50: Created model with 27 nodes on GPU 0.

08/26/2016 11:16:50: Training criterion node(s):
08/26/2016 11:16:50: 	ce = CrossEntropyWithSoftmax

08/26/2016 11:16:50: Evaluation criterion node(s):
08/26/2016 11:16:50: 	errs = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 49 matrices, 29 are shared as 13, and 20 are not shared.

	{ conv1.cpb : [28 x 28 x 16 x *]
	  conv1.w.W : [16 x 25] (gradient) }
	{ conv1.c.c : [28 x 28 x 16 x *] (gradient)
	  conv1.out : [28 x 28 x 16 x *] }
	{ conv1.cpb : [28 x 28 x 16 x *] (gradient)
	  pool1 : [14 x 14 x 16 x *] }
	{ conv1.b.b : [1 x 1 x 16] (gradient)
	  conv1.out : [28 x 28 x 16 x *] (gradient) }
	{ conv2.cpb : [14 x 14 x 32 x *]
	  conv2.w.W : [32 x 400] (gradient) }
	{ conv2.c.c : [14 x 14 x 32 x *] (gradient)
	  conv2.out : [14 x 14 x 32 x *] }
	{ conv2.cpb : [14 x 14 x 32 x *] (gradient)
	  pool1 : [14 x 14 x 16 x *] (gradient)
	  pool2.p : [7 x 7 x 32 x *] }
	{ conv2.b.b : [1 x 1 x 32] (gradient)
	  conv2.out : [14 x 14 x 32 x *] (gradient)
	  h1.t : [128 x *] }
	{ h1.W : [128 x 7 x 7 x 32] (gradient)
	  h1.z : [128 x 1 x *] }
	{ h1.t : [128 x *] (gradient)
	  h1.y : [128 x 1 x *] }
	{ h1.z : [128 x 1 x *] (gradient)
	  ol.t : [10 x 1 x *]
	  pool2.p : [7 x 7 x 32 x *] (gradient) }
	{ ol.W : [10 x 128] (gradient)
	  ol.z : [10 x 1 x *] (gradient) }
	{ h1.b : [128 x 1] (gradient)
	  h1.y : [128 x 1 x *] (gradient) }


08/26/2016 11:16:50: Training 215370 parameters in 8 out of 8 parameter tensors and 22 nodes with gradient:

08/26/2016 11:16:50: 	Node 'conv1.b.b' (LearnableParameter operation) : [1 x 1 x 16]
08/26/2016 11:16:50: 	Node 'conv1.w.W' (LearnableParameter operation) : [16 x 25]
08/26/2016 11:16:50: 	Node 'conv2.b.b' (LearnableParameter operation) : [1 x 1 x 32]
08/26/2016 11:16:50: 	Node 'conv2.w.W' (LearnableParameter operation) : [32 x 400]
08/26/2016 11:16:50: 	Node 'h1.W' (LearnableParameter operation) : [128 x 7 x 7 x 32]
08/26/2016 11:16:50: 	Node 'h1.b' (LearnableParameter operation) : [128 x 1]
08/26/2016 11:16:50: 	Node 'ol.W' (LearnableParameter operation) : [10 x 128]
08/26/2016 11:16:50: 	Node 'ol.b' (LearnableParameter operation) : [10 x 1]

08/26/2016 11:16:50: No PreCompute nodes found, or all already computed. Skipping pre-computation step.

08/26/2016 11:16:50: Starting Epoch 1: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples

08/26/2016 11:16:50: Starting minibatch loop.
08/26/2016 11:16:53:  Epoch[ 1 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.98925934 * 16000; errs = 33.087% * 16000; time = 3.3535s; samplesPerSecond = 4771.1
08/26/2016 11:16:55:  Epoch[ 1 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.16534613 * 16000; errs = 4.787% * 16000; time = 2.3541s; samplesPerSecond = 6796.6
08/26/2016 11:16:58:  Epoch[ 1 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.10741089 * 16000; errs = 3.181% * 16000; time = 2.3508s; samplesPerSecond = 6806.3
08/26/2016 11:17:00: Finished Epoch[ 1 of 3]: [Training] ce = 0.35380680 * 60000; errs = 11.483% * 60000; totalSamplesSeen = 60000; learningRatePerSample = 0.003125; epochTime=9.83185s
08/26/2016 11:17:00: SGD: Saving checkpoint model '/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/Models/02_Convolution.1'

08/26/2016 11:17:00: Starting Epoch 2: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples

08/26/2016 11:17:00: Starting minibatch loop.
08/26/2016 11:17:02:  Epoch[ 2 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.07252145 * 16000; errs = 2.219% * 16000; time = 2.3573s; samplesPerSecond = 6787.4
08/26/2016 11:17:04:  Epoch[ 2 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.06217503 * 16000; errs = 1.912% * 16000; time = 2.3627s; samplesPerSecond = 6772.0
08/26/2016 11:17:07:  Epoch[ 2 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.06354430 * 16000; errs = 1.844% * 16000; time = 2.3633s; samplesPerSecond = 6770.1
08/26/2016 11:17:08: Finished Epoch[ 2 of 3]: [Training] ce = 0.06565070 * 60000; errs = 1.978% * 60000; totalSamplesSeen = 120000; learningRatePerSample = 0.003125; epochTime=8.85624s
08/26/2016 11:17:08: SGD: Saving checkpoint model '/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/Models/02_Convolution.2'

08/26/2016 11:17:08: Starting Epoch 3: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples

08/26/2016 11:17:08: Starting minibatch loop.
08/26/2016 11:17:11:  Epoch[ 3 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.04610618 * 16000; errs = 1.400% * 16000; time = 2.3607s; samplesPerSecond = 6777.7
08/26/2016 11:17:13:  Epoch[ 3 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.04150417 * 16000; errs = 1.200% * 16000; time = 2.3537s; samplesPerSecond = 6797.7
08/26/2016 11:17:16:  Epoch[ 3 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.04880609 * 16000; errs = 1.387% * 16000; time = 2.3638s; samplesPerSecond = 6768.8
08/26/2016 11:17:17: Finished Epoch[ 3 of 3]: [Training] ce = 0.04505229 * 60000; errs = 1.328% * 60000; totalSamplesSeen = 180000; learningRatePerSample = 0.003125; epochTime=8.85535s
08/26/2016 11:17:17: SGD: Saving checkpoint model '/tmp/cntk-test-20160826102023.187877/Examples/Image/MNIST_02_Convolution@release_gpu/Models/02_Convolution'
08/26/2016 11:17:17: CNTKCommandTrainEnd: train

08/26/2016 11:17:17: Action "train" complete.


08/26/2016 11:17:17: ##############################################################################
08/26/2016 11:17:17: #                                                                            #
08/26/2016 11:17:17: # Action "test"                                                              #
08/26/2016 11:17:17: #                                                                            #
08/26/2016 11:17:17: ##############################################################################


Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ClassificationError()
	ol.z = Plus()

Validating network. 27 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> ol.W = LearnableParameter() :  -> [10 x 128]
Validating --> h1.W = LearnableParameter() :  -> [128 x 7 x 7 x 32]
Validating --> conv2.w.W = LearnableParameter() :  -> [32 x 400]
Validating --> conv1.w.W = LearnableParameter() :  -> [16 x 25]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [28 x 28 x 1 x *1]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [28 x 28 x 1 x *1] -> [28 x 28 x 1 x *1]
Validating --> conv1.c.c = Convolution (conv1.w.W, featScaled) : [16 x 25], [28 x 28 x 1 x *1] -> [28 x 28 x 16 x *1]
Validating --> conv1.b.b = LearnableParameter() :  -> [1 x 1 x 16]
Validating --> conv1.cpb = Plus (conv1.c.c, conv1.b.b) : [28 x 28 x 16 x *1], [1 x 1 x 16] -> [28 x 28 x 16 x *1]
Validating --> conv1.out = RectifiedLinear (conv1.cpb) : [28 x 28 x 16 x *1] -> [28 x 28 x 16 x *1]
Validating --> pool1 = MaxPooling (conv1.out) : [28 x 28 x 16 x *1] -> [14 x 14 x 16 x *1]
Validating --> conv2.c.c = Convolution (conv2.w.W, pool1) : [32 x 400], [14 x 14 x 16 x *1] -> [14 x 14 x 32 x *1]
Validating --> conv2.b.b = LearnableParameter() :  -> [1 x 1 x 32]
Validating --> conv2.cpb = Plus (conv2.c.c, conv2.b.b) : [14 x 14 x 32 x *1], [1 x 1 x 32] -> [14 x 14 x 32 x *1]
Validating --> conv2.out = RectifiedLinear (conv2.cpb) : [14 x 14 x 32 x *1] -> [14 x 14 x 32 x *1]
Validating --> pool2.p = Pooling (conv2.out) : [14 x 14 x 32 x *1] -> [7 x 7 x 32 x *1]
Validating --> h1.t = Times (h1.W, pool2.p) : [128 x 7 x 7 x 32], [7 x 7 x 32 x *1] -> [128 x *1]
Validating --> h1.b = LearnableParameter() :  -> [128 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [128 x *1], [128 x 1] -> [128 x 1 x *1]
Validating --> h1.y = Sigmoid (h1.z) : [128 x 1 x *1] -> [128 x 1 x *1]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 128], [128 x 1 x *1] -> [10 x 1 x *1]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *1], [10 x 1] -> [10 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> errs = ClassificationError (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]

Validating network. 16 nodes to process in pass 2.


Validating network, final pass.

conv1.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 1, Output: 28 x 28 x 16, Kernel: 5 x 5 x 1, Map: 1 x 1 x 16, Stride: 1 x 1 x 1, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
pool1: using cuDNN convolution engine for geometry: Input: 28 x 28 x 16, Output: 14 x 14 x 16, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
conv2.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 16, Output: 14 x 14 x 32, Kernel: 5 x 5 x 16, Map: 32, Stride: 1 x 1 x 16, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0 x 0 x 0, UpperPad: 0 x 0 x 0.
pool2.p: using cuDNN convolution engine for geometry: Input: 14 x 14 x 32, Output: 7 x 7 x 32, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0 x 0 x 0, UpperPad: 0 x 0 x 0.


11 out of 27 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 27 matrices, 0 are shared as 0, and 27 are not shared.


08/26/2016 11:17:18: Minibatch[1-10]: errs = 1.400% * 10000; ce = 0.04776463 * 10000
08/26/2016 11:17:18: Final Results: Minibatch[1-10]: errs = 1.400% * 10000; ce = 0.04776463 * 10000; perplexity = 1.04892374

08/26/2016 11:17:18: Action "test" complete.

08/26/2016 11:17:18: __COMPLETED__
